package com.bootcamp.finalProyect.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Entity
@ApiModel("Model Cart")
@Table(name = "cart")
public class Cart {

    private int id;
    private String date;
    private boolean state;

    public Cart() {
    }

    public Cart(int id, String date) {
        this.id = id;
        this.date = date;
        this.state = false;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty(value = "the cart's id autogenerated")
    @Column(name = "idcart")
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ApiModelProperty(value = "the cart's creation date")
    @Column (name = "date")
    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    @ApiModelProperty(value = "the cart's purchase state")
    @Column (name = "state")
    public boolean isState() {
        return state;
    }

    public void setState(boolean state) {
        this.state = state;
    }

    @ApiModelProperty(value = "the products which are in the cart")
    @ManyToMany(fetch = FetchType.LAZY,
            cascade = {
                    CascadeType.PERSIST,
                    CascadeType.MERGE
            })
    @JoinTable(name = "cart_has_product",
            joinColumns = { @JoinColumn(name = "cart_idcart") },
            inverseJoinColumns = { @JoinColumn(name = "product_idproduct") })
    @JsonIgnore
    public Set<Product> getProducts() {
        return products;
    }

    public void setProducts(Set<Product> products) {
        this.products = products;
    }

    private Set<Product> products = new HashSet<>();

    private User user;

    @ApiModelProperty(value = "the user who is linked to the cart")
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "user_iduser", nullable = false)
    @JsonIgnore
    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }
}
